name: test
on:
  push:
    branches:
      - master
  pull_request: {}
jobs:
  browser-runtime:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
        working-directory: ./browser-runtime
      - run: npm run eslint:check
        working-directory: ./browser-runtime
      - run: npm run build
        working-directory: ./browser-runtime
      - run: npm test
        working-directory: ./browser-runtime

  cli:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
        working-directory: ./cli
      - run: npm run eslint:check
        working-directory: ./cli
      - run: npm run build
        working-directory: ./cli
      - run: npm test
        working-directory: ./cli

  dart-generator:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
        working-directory: ./dart-generator
      - run: npm run eslint:check
        working-directory: ./dart-generator
      - run: npm run build
        working-directory: ./dart-generator
      - run: npm test
        working-directory: ./dart-generator

  dart-runtime:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        flutter-version: [3.10.x]
        flutter-channel: [stable]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: 12.x
          distribution: zulu
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.flutter-version }}
          channel: ${{ matrix.flutter-channel }}
      - run: flutter pub get
        working-directory: ./dart-runtime
      - run: flutter test
        working-directory: ./dart-runtime
      - run: if [ "${{ matrix.flutter-version }}" == "3.0.x" ]; then flutter analyze; fi
        working-directory: ./dart-runtime
      - run: if [ "${{ matrix.flutter-version }}" == "3.0.x" ]; then flutter format . --set-exit-if-changed; fi
        working-directory: ./dart-runtime
      - run: if [ "${{ matrix.flutter-version }}" == "3.0.x" ]; then flutter pub pub publish --dry-run; fi
        working-directory: ./dart-runtime

  node-runtime:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
        working-directory: ./node-runtime
      - run: npm install
        working-directory: ./csharp-generator
      - run: npm install
        working-directory: ./fsharp-generator
      - run: npm install
        working-directory: ./dart-generator
      - run: npm install
        working-directory: ./kotlin-generator
      - run: npm install
        working-directory: ./swift-generator
      - run: npm install
        working-directory: ./typescript-generator
      - run: npm run eslint:check
        working-directory: ./node-runtime
      - run: npm run build
        working-directory: ./node-runtime
      - run: npm test
        working-directory: ./node-runtime

  parser:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
        working-directory: ./parser
      - run: npm run eslint:check
        working-directory: ./parser
      - run: npm run build
        working-directory: ./parser
      - run: npm test
        working-directory: ./parser

  playground:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install && npm install -g json && bash .ci.sh
        working-directory: ./playground
      - run: npm run eslint:check
        working-directory: ./playground
      - run: npm run build
        working-directory: ./playground

  typescript-generator:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
        working-directory: ./typescript-generator
      - run: npm run eslint:check
        working-directory: ./typescript-generator
      - run: npm run build
        working-directory: ./typescript-generator
      - run: npm test
        working-directory: ./typescript-generator

  csharp-generator:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
        working-directory: ./csharp-generator
      - run: npm run eslint:check
        working-directory: ./csharp-generator
      - run: npm run build
        working-directory: ./csharp-generator
      - run: npm test
        working-directory: ./csharp-generator

  fsharp-generator:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
        working-directory: ./fsharp-generator
      - run: npm run eslint:check
        working-directory: ./fsharp-generator
      - run: npm run build
        working-directory: ./fsharp-generator
      - run: npm test
        working-directory: ./fsharp-generator

  dotnet-runtime:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ["5.0.x", "6.0.x"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          include-prerelease: true
      - run: dotnet pack
        working-directory: ./dotnet-runtime/runtime

  kotlin-generator:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
        working-directory: ./kotlin-generator
      - run: npm run eslint:check
        working-directory: ./kotlin-generator
      - run: npm run build
        working-directory: ./kotlin-generator
      - run: npm test
        working-directory: ./kotlin-generator

  swift-generator:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
        working-directory: ./swift-generator
      - run: npm run eslint:check
        working-directory: ./swift-generator
      - run: npm run build
        working-directory: ./swift-generator
      - run: npm test
        working-directory: ./swift-generator

  android-runtime:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
      - uses: gradle/wrapper-validation-action@v1
      - run: echo "empty=empty" >> local.properties 
        working-directory: ./android-runtime
      - run: ./gradlew test assembleRelease
        working-directory: ./android-runtime

  vscode-ext:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - run: npm install -g vsce
      - run: vsce package
        working-directory: ./vscode-ext
