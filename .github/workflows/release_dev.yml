name: release_dev
on:
  push:
    branches:
      - main
      - feat/lerna
permissions:
  id-token: write
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Set version 📄
        run: echo -n 0.0.0-dev.$(date -u +'%Y%m%d%H%M%S') | tee version.txt

      - name: Setup Node.js 📦
        uses: actions/setup-node@v4
        with:
          node-version: 20
          scope: "@sdkgen"
          registry-url: https://registry.npmjs.org

      - name: Setup .NET 🎯
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Setup Java ☕
        uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: "11"

      - name: Install dependencies 🔧
        run: |
          npm ci --include=dev

      - name: Build code 🚚
        run: |
          npm run build

      - name: Publish NPM packages 🚀
        run: |
          cp -r LICENSE packages/*
          npx lerna publish $(cat version.txt) --no-git-tag-version --no-push --yes
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Pack .NET package 🚚
        run: dotnet pack -c:Release -p:PackageVersion=$(cat ../../../version.txt)
        working-directory: ./packages/dotnet-runtime/runtime

      - name: Publish .NET package 🚀
        run: dotnet nuget push bin/**/*.nupkg -k $NUGET_TOKEN -s https://api.nuget.org/v3/index.json
        working-directory: ./packages/dotnet-runtime/runtime
        env:
          NUGET_TOKEN: ${{ secrets.NUGET_TOKEN }}

      - name: Prepare Android package 🧪
        run: |
          sed -i -e "s/versionName \"1.0\"/versionName \"$(cat ../../version.txt)\"/g" runtime/build.gradle
          sed -i -e "s/versionCode 1/versionCode $(date +%s)/g" runtime/build.gradle
          sed -i -e "s/PUBLISH_VERSION = \'0.0.0\'/PUBLISH_VERSION = \'$(cat ../../version.txt)\'/g" runtime/build.gradle
          sed -i -e "s/version = \"0.0.0\"/version = \"$(cat ../../version.txt)\"/g" build.gradle
          echo "SONATYPE_NEXUS_USERNAME=${{ secrets.NEXUS_MAVEN_USER }}" >> local.properties
          echo "SONATYPE_NEXUS_PASSWORD=${{ secrets.NEXUS_MAVEN_PASSWORD }}" >> local.properties
          echo "signing.keyId=${{ secrets.MAVEN_GPG_KEY_ID }}" >> local.properties
          echo "signing.password=${{ secrets.MAVEN_GPG_KEY_PASSWORD }}" >> local.properties
          echo "signing.secretKeyRingFile=${{ secrets.MAVEN_GPG_KEY_FILE_PATH }}" >> local.properties
          echo "${{ secrets.MAVEN_GPG_FILE_CONTENT }}" | base64 -d > runtime/"${{ secrets.MAVEN_GPG_KEY_FILE_PATH }}"
        working-directory: ./packages/android-runtime

      - name: Check Gradle Wrapper 👀
        uses: gradle/wrapper-validation-action@v1

      - name: Publish Android package 🚀
        run: ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository
        working-directory: ./packages/android-runtime
