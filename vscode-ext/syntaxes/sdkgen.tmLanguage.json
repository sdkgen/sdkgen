{
	"name": "sdkgen",
	"patterns": [
		{
			"include": "#any"
		},
		{
			"include": "#annotations"
		},
		{
			"name": "meta.import",
			"begin": "(import) ",
			"beginCaptures": {
				"1": {
					"name": "keyword.control"
				}
			},
			"end": "\n",
			"patterns": [
				{
					"include": "#literal"
				}
			]
		},
		{
			"name": "meta.error",
			"begin": "(error) ([A-Z][a-zA-Z0-9]*)",
			"beginCaptures": {
				"1": {
					"name": "keyword.control"
				},
				"2": {
					"name": "entity.name.type"
				}
			},
			"end": "\n",
			"patterns": [
				{
					"include": "#type"
				}
			]
		},
		{
			"name": "meta.type",
			"begin": "(type) ([A-Z][a-zA-Z0-9]*) ",
			"beginCaptures": {
				"1": {
					"name": "keyword.control"
				},
				"2": {
					"name": "entity.name.type"
				}
			},
			"end": "\n",
			"patterns": [
				{
					"include": "#type"
				}
			]
		},
		{
			"name": "meta.operation",
			"begin": "(get|function|fn) ([a-zA-Z0-9]+)",
			"beginCaptures": {
				"1": {
					"name": "keyword.control"
				},
				"2": {
					"name": "entity.name.function"
				}
			},
			"end": "\n",
			"patterns": [
				{
					"name": "meta.operation.args",
					"begin": "\\(",
					"end": "\\)",
					"patterns": [
						{
							"include": "#fields"
						}
					]
				},
				{
					"include": "#type"
				}
			]
		}
	],
	"repository": {
		"any": {
			"patterns": [
				{
					"name": "comment.line",
					"match": "//(.*?)\n"
				},
				{
					"name": "comment.block",
					"begin": "/\\*",
					"end": "\\*/"
				}
			]
		},
		"annotations": {
			"patterns": [
				{
					"name": "meta.annotation.description.block",
					"begin": "(@description) (.*\\\\)\\n",
					"end": "(.*[^\\\\])\\n",
					"beginCaptures": {
						"1": {
							"name": "constant.numeric"
						},
						"2": {
							"name": "comment.block.documentation"
						}
					},
					"endCaptures": {
						"1": {
							"name": "comment.block.documentation"
						}
					},
					"patterns": [
						{
							"name": "comment.block.documentation",
							"match": ".*\\\\\\n"
						}
					]
				},
				{
					"name": "meta.annotation.description",
					"match": "(@description) (.*)\\n",
					"captures": {
						"1": {
							"name": "constant.numeric"
						},
						"2": {
							"name": "comment.block.documentation"
						}
					}
				},
				{
					"name": "meta.annotation.arg.block",
					"begin": "(@arg) (\\w+) (.*\\\\)\\n",
					"end": "(.*[^\\\\])\\n",
					"beginCaptures": {
						"1": {
							"name": "constant.numeric"
						},
						"2": {
							"name": "variable.parameter"
						},
						"3": {
							"name": "comment.block.documentation"
						}
					},
					"endCaptures": {
						"1": {
							"name": "comment.block.documentation"
						}
					},
					"patterns": [
						{
							"name": "comment.block.documentation",
							"match": ".*\\\\\\n"
						}
					]
				},
				{
					"name": "meta.annotation.arg",
					"match": "(@arg) (\\w+) (.*)\\n",
					"captures": {
						"1": {
							"name": "constant.numeric"
						},
						"2": {
							"name": "variable.parameter"
						},
						"3": {
							"name": "comment.block.documentation"
						}
					}
				},
				{
					"name": "meta.annotation.throws",
					"match": "(@throws) (\\w+)\n",
					"captures": {
						"1": {
							"name": "constant.numeric"
						},
						"2": {
							"name": "entity.name.type"
						}
					}
				},
				{
					"name": "meta.annotations.rest",
					"begin": "(@rest) (\\w+)",
					"beginCaptures": {
						"1": {
							"name": "constant.numeric"
						},
						"2": {
							"name": "entity.name.type"
						}
					},
					"end": "\n",
					"patterns": [
						{
							"name": "variable.parameter",
							"match": "\\{\\w+\\}"
						}
					]
				},
				{
					"name": "meta.annotation.hidden",
					"match": "(@hidden)\n",
					"captures": {
						"1": {
							"name": "constant.numeric"
						},
						"2": {
							"name": "entity.name.type"
						}
					}
				}
			]
		},
		"fields": {
			"patterns": [
				{
					"include": "#any"
				},
				{
					"include": "#annotations"
				},
				{
					"name": "meta.field",
					"begin": "(\\w+):",
					"beginCaptures": {
						"1": {
							"name": "variable.parameter"
						}
					},
					"end": "(?=\n|,|;|\\)|\\})",
					"patterns": [
						{
							"include": "#type"
						}
					]
				},
				{
					"name": "meta.spread",
					"match": "(\\.\\.\\.)\\s?([A-Z][a-zA-Z0-9]*)",
					"captures": {
						"1": {
							"name": "markup.bold"
						},
						"2": {
							"name": "entity.name.type"
						}
					}
				}
			]
		},
		"type": {
			"patterns": [
				{
					"include": "#any"
				},
				{
					"name": "keyword.type",
					"match": "\\b(bool|int|uint|float|bigint|string|datetime|date|bytes|void|money|cpf|cnpj|email|html|url|uuid|hex|base64|xml|json)\\b"
				},
				{
					"name": "markup.bold",
					"match": "(\\?|\\[\\])"
				},
				{
					"name": "entity.name.type",
					"match": "\\b([A-Z][a-zA-Z0-9]*)\\b"
				},
				{
					"name": "constant.numeric",
					"match": "(![a-zA-Z0-9]+)\\b"
				},
				{
					"name": "meta.type",
					"begin": "\\{",
					"beginCaptures": {
						"1": {
							"name": "keyword.control"
						},
						"2": {
							"name": "entity.name.type"
						}
					},
					"end": "\\}",
					"patterns": [
						{
							"include": "#fields"
						}
					]
				},
				{
					"name": "meta.enum",
					"begin": "(enum) \\{",
					"beginCaptures": {
						"1": {
							"name": "keyword.control"
						},
						"2": {
							"name": "entity.name.type"
						}
					},
					"end": "\\}",
					"patterns": [
						{
							"include": "#any"
						},
						{
							"name": "variable.parameter",
							"match": "(\\w+)"
						},
						{
							"name": "variable.parameter",
							"begin": "(\\w+)\\(",
							"end": "\\)",
							"patterns": [
								{
									"include": "#fields"
								}
							]
						}
					]
				}
			]
		},
		"literal": {
			"patterns": [
				{
					"include": "#any"
				},
				{
					"name": "string.quoted.double.untitled",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.untitled",
							"match": "\\."
						}
					]
				},
				{
					"name": "keyword.literal",
					"match": "\\b(true|false)\\b"
				}
			]
		}
	},
	"scopeName": "source.sdkgen"
}
